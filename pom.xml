<?xml version="1.0" encoding="UTF-8"?>
<!--
  !++
  QDS - Quick Data Signalling Library
  !-
  Copyright (C) 2002 - 2024 Devexperts LLC
  !-
  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
  If a copy of the MPL was not distributed with this file, You can obtain one at
  http://mozilla.org/MPL/2.0/.
  !__
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.devexperts.qd</groupId>
    <artifactId>QD</artifactId>
    <packaging>pom</packaging>
    <version>3.339</version>

    <inceptionYear>2002</inceptionYear>
    <organization>
        <name>Devexperts LLC</name>
        <url>http://www.devexperts.com</url>
    </organization>

    <modules>
        <!-- main deliverable modules -->
        <module>dxlib</module>
        <module>mars</module>
        <module>qds</module>
        <module>qds-file</module>
        <module>qds-monitoring</module>
        <module>qds-tools</module>
        <module>qd-dataextractor</module>
        <module>dxfeed-api</module>
        <module>dxfeed-promise</module>
        <module>dxfeed-samples</module>
        <module>dxfeed-viewer-installer</module>
        <module>dxfeed-bin</module>
        <module>dxfeed-webservice</module>
        <module>dxfeed-plotter</module>

        <!-- additional modules with deliverable JavaDocs (shaded into qds.jar) -->
        <module>qd-core</module>

        <!-- other modules shaded into qds.jar -->
        <module>dxlib-qd-sandbox</module>
        <module>auth</module>
        <module>proto</module>
        <module>qd-rmi</module>
        <module>dxfeed-scheme</module>
        <module>dxfeed-impl</module>
        <module>dxfeed-ipf-filter</module>

        <!-- modules shaded into qds-tools.jar -->
        <module>proto-ssl</module>
        <module>qd-logger</module>
        <module>qd-nio</module>
        <module>qd-stripe</module>
        <module>qd-tools</module>
        <module>qd-samplecert</module>
        <module>dxfeed-tools</module>

        <module>dxlink-websocket</module>

        <!-- other (internal) modules -->
        <module>mars-sample</module>
        <module>proto-sample</module>
        <module>dxfeed-codegen</module>
        <module>qd-sample</module>
        <module>build-support</module>
        <module>rt-api-builder</module>
        <module>teamcity-version</module>
        <module>dxfeed-codegen-verify</module>
        <module>dxfeed-viewer</module>
        <module>dxfeed-ondemand</module>
        <module>dxfeed-webservice-impl</module>
        <module>benchmarks</module>
        <module>dxlib-jcstress</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.devexperts.dgen</groupId>
            <artifactId>dgen</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- use log4j2 in tests -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>

        <!-- The staging directory where modules install their deliverable artifacts
             during 'install' phase.
             NOTE: For manual delivery and development purposes only.
        -->
        <install.dir>../target/install</install.dir>

        <!-- Module should set 'deploy.file.skip' property to 'false' to deploy an artifact locally to [install.dir].
        Also, 'deploy.classifier' & 'deploy.extension' can be adjusted to properly specify an artifact to be deployed.
        -->
        <deploy.file.skip>true</deploy.file.skip>
        <deploy.extension>${project.packaging}</deploy.extension>
        <deploy.classifier />
        <!-- strip version part from artifact file name in [install.dir] -->
        <deploy.strip.version>true</deploy.strip.version>

        <!-- Profiles may override "deploy.suffix" property to define the suffix for version-labeling strings -->
        <deploy.suffix />
        <deploy.version>${project.version}${deploy.suffix}</deploy.version>

        <!-- Internal modules set it to true  -->
        <deploy.skip>false</deploy.skip>
        <!-- Most modules don't produce javadoc -->
        <javadoc.skip>true</javadoc.skip>
        <javadoc.error.pattern>\*?\s*@author.*</javadoc.error.pattern>

        <!-- shortcut for cache control (use -DskipBuildCache for "clean" build) -->
        <skipBuildCache>false</skipBuildCache>
        <maven.build.cache.skipCache>${skipBuildCache}</maven.build.cache.skipCache>

        <!-- SHADED: excludes for shaded artifacts when used inside a war. Keep in sync with qds & dxfeed-api poms -->
        <shaded.war.excludes>
            WEB-INF/lib/qd-core.jar,
            WEB-INF/lib/dxlib-qd-sandbox.jar,
            WEB-INF/lib/auth.jar,
            WEB-INF/lib/proto.jar,
            WEB-INF/lib/proto-ssl.jar,
            WEB-INF/lib/qd-rmi.jar,
            WEB-INF/lib/dxfeed-impl.jar,
            WEB-INF/lib/dxfeed-scheme.jar,
            WEB-INF/lib/dxfeed-ipf-filter.jar,
            WEB-INF/lib/dxfeed-promise.jar
        </shaded.war.excludes>

        <!-- version of Jetty for all web and servlet modules -->
        <jetty.version>9.4.42.v20210604</jetty.version>
        <!-- need to be in sync with servlet-api -->
        <servlet-api.version>3.1.0</servlet-api.version>
        <!-- need to be in sync with jetty -->
        <jasper.version>8.5.54</jasper.version>

        <!-- versions of frameworks and libraries to use -->
        <log4j.version>1.1.3</log4j.version>
        <log4j2.version>2.17.2</log4j2.version>
        <jackson.version>2.13.3</jackson.version>
        <jaxb.version>2.2.7</jaxb.version>
        <cometd.version>5.0.8</cometd.version>
        <!-- slf4j: same version as used by cometd above -->
        <slf4j.version>1.7.30</slf4j.version>
        <aspectj.version>1.8.2</aspectj.version>
        <junit.version>4.13.2</junit.version>
        <jmh.version>1.37</jmh.version>
        <jmxtools.version>1.2.8</jmxtools.version>
        <mycila-license-maven-plugin.version>3.0</mycila-license-maven-plugin.version>
        <typesafe-config.version>1.4.3</typesafe-config.version>
        <netty.version>4.1.101.Final</netty.version>
        <reflections.version>0.10.2</reflections.version>
        <jsr305.version>3.0.0</jsr305.version>
        <openbeans.version>1.0.2</openbeans.version>
        <wiremock.version>2.35.2</wiremock.version>
        <awaitility.version>4.2.1</awaitility.version>
        <hamcrest.version>2.2</hamcrest.version>
    </properties>

    <profiles>
        <!-- Define deployment properties for release  -->
        <profile>
            <id>release-profile</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <maven.build.cache.enabled>false</maven.build.cache.enabled>
                <deploy.suffix />
            </properties>
        </profile>
        <profile>
            <id>snapshot-delivery</id>
            <properties>
                <maven.build.cache.enabled>false</maven.build.cache.enabled>
                <deploy.suffix>-${maven.build.timestamp}</deploy.suffix>
            </properties>
        </profile>
        <profile>
            <!-- license checking routines moved out from main execution profile due to general performance impact
            and some other issues - see [QD-1374] -->
            <id>license-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${mycila-license-maven-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.mycila</groupId>
                                <artifactId>license-maven-plugin-git</artifactId>
                                <version>${mycila-license-maven-plugin.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <aggregate>true</aggregate>
                            <failIfMissing>true</failIfMissing>
                            <quiet>false</quiet>
                            <header>build-support/src/main/resources/MPL-2_0-header.txt</header>
                            <properties>
                                <owner>${project.organization.name}</owner>
                            </properties>
                            <headerDefinitions>
                                <headerDefinition>build-support/src/main/resources/header-styles.xml</headerDefinition>
                            </headerDefinitions>
                            <mapping>
                                <java>SLASHSTAR_STYLE</java>
                                <css>SLASHSTAR_STYLE</css>
                                <html>MYXML_STYLE</html>
                                <xml>MYXML_STYLE</xml>
                                <xsd>MYXML_STYLE</xsd>
                                <properties>PROPS_STYLE</properties>
                                <jsp>JSP_STYLE</jsp>
                            </mapping>
                            <includes>
                                <include>**/src/**</include>
                            </includes>
                            <useDefaultExcludes>true</useDefaultExcludes>
                            <excludes>
                                <exclude>**/*.txt</exclude>
                                <exclude>**/*.ftl</exclude>
                                <exclude>**/*.sh</exclude>
                                <exclude>**/*.bat</exclude>
                                <exclude>blog/</exclude>
                                <exclude>**/.*/</exclude>
                                <exclude>**/overlays/</exclude>
                                <!-- skip poms to avoid self-update-check issues during release -->
                                <exclude>**/pom.xml</exclude>
                                <!-- dxfeed-webservice third-party js libs -->
                                <exclude>**/angularjs/</exclude>
                                <exclude>**/flot/</exclude>
                                <exclude>**/jquery/</exclude>
                                <exclude>**/mootools/</exclude>
                                <!-- mute some popular unknown files -->
                                <exclude>**/*.form</exclude>
                                <exclude>**/*.log</exclude>
                                <exclude>**/*.install4j</exclude>
                            </excludes>
                        </configuration>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>license-check</id>
                                <phase>verify</phase>
                                <inherited>false</inherited>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Compile at Java 1.8 level -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <fork>true</fork>
                    <compilerArgs>
                        <!-- -XDignore.symbol.file use to prevent warnings about of usages Unsafe java api
                             This param ignore symbol file for compilation and use directly rt.jar.
                        -->
                        <arg>-XDignore.symbol.file</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Don't add Maven descriptor to jars, but add default Implementation & Specification -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <!-- don't include version into class-path attribute -->
                            <customClasspathLayout>$${artifact.artifactId}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout>
                            <customClasspathLayout>$${artifact.artifactId}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Title>${project.name}</Implementation-Title>
                            <Implementation-Version>${deploy.version}</Implementation-Version>
                            <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                            <Built-By>${user.name}</Built-By>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- Attach sources for all modules -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Default configuration for JavaDoc plugin.
                 Modules that need JavaDoc explicitly define JavaDoc plugin execution
             -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <tags>
                        <tag>
                            <name>implSpec</name>
                            <placement>a</placement>
                            <head>Implementation Requirements:</head>
                        </tag>
                        <tag>
                            <name>dgen.annotate</name>
                            <!-- for all places -->
                            <placement>a</placement>
                        </tag>
                    </tags>
                    <excludePackageNames>*.impl:*.impl.*</excludePackageNames>
                    <author>false</author>
                    <use>true</use>
                    <links>
                        <link>http://docs.oracle.com/javase/8/docs/api/</link>
                    </links>
                    <stylesheetfile>${basedir}/../css/stylesheet.css</stylesheetfile>
                    <doclint>none</doclint>
                    <skip>${javadoc.skip}</skip>
                </configuration>
            </plugin>
            <!-- Configuration for release -->
            <plugin>
                <groupId>com.devexperts.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>1.0-m5.1-devexperts</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <flowInitContext>
                        <versionTagPrefix>qd-qds-</versionTagPrefix>
                    </flowInitContext>
                    <squash>true</squash>
                    <scmCommentPrefix>[release] </scmCommentPrefix>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.jcraft</groupId>
                        <artifactId>jsch</artifactId>
                        <version>0.1.55</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>qd-qds-@{version}</tagNameFormat>
                </configuration>
            </plugin>
            <!-- Enforce specific JVM version and plugin versions -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>[3.6,)</version>
                        </requireMavenVersion>
                        <DependencyConvergence />
                        <requireJavaVersion>
                            <!-- require 1.8 JDK for compilation -->
                            <version>[1.8,1.9)</version>
                        </requireJavaVersion>
                        <requirePluginVersions>
                            <message>Best Practice is to always define plugin versions!</message>
                            <banLatest>true</banLatest>
                            <banRelease>true</banRelease>
                            <banSnapshots>true</banSnapshots>
                        </requirePluginVersions>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Deployment is controlled by a property -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>${deploy.skip}</skip>
                </configuration>
            </plugin>

            <!-- custom stuff with antrun plugin to upload key artifacts   -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- check that @author is not used in javadocs -->
                        <id>check-author-string</id>
                        <phase>validate</phase>
                        <configuration>
                            <target xmlns:if="ant:if">
                                <pathconvert pathsep="${line.separator}" property="invalidJavadoc" setonempty="false">
                                    <fileset dir="${project.build.sourceDirectory}" includes="**/*.java" erroronmissingdir="false">
                                        <containsregexp expression="${javadoc.error.pattern}" />
                                    </fileset>
                                    <fileset dir="${project.build.testSourceDirectory}" includes="**/*.java" erroronmissingdir="false">
                                        <containsregexp expression="${javadoc.error.pattern}" />
                                    </fileset>
                                </pathconvert>
                                <echo message="Found tag '@author' in javadoc: ${line.separator}${invalidJavadoc}" level="error" if:set="invalidJavadoc" />
                                <fail message="Found tag '@author' in javadoc" if="invalidJavadoc" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Place some artifacts to the [install.dir] -->
                        <id>install-artifact-file</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <skip>${deploy.file.skip}</skip>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <stripVersion>${deploy.strip.version}</stripVersion>
                            <outputDirectory>${install.dir}</outputDirectory>
                            <artifact>${project.groupId}:${project.artifactId}:${project.version}:${deploy.extension}:${deploy.classifier}</artifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipAfterFailureCount>42</skipAfterFailureCount>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <systemPropertyVariables>
                        <com.devexperts.rmi.removeStackTraces>false</com.devexperts.rmi.removeStackTraces>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>

        <!-- Define versions of all plugins -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>2.0.0-M3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M7</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.10.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-jspc-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                    <configuration>
                        <jspc>
                            <package>jsp</package>
                        </jspc>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.samaxes.maven</groupId>
                    <artifactId>minify-maven-plugin</artifactId>
                    <version>1.7.6</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.plexus</groupId>
                            <artifactId>plexus-utils</artifactId>
                            <version>3.5.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>2.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.devexperts.qd</groupId>
                    <artifactId>dxfeed-codegen</artifactId>
                    <version>${project.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.install4j</groupId>
                    <artifactId>install4j-maven-plugin</artifactId>
                    <version>1.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dxfeed-open</id>
            <name>dxfeed-open</name>
            <url>https://dxfeed.jfrog.io/artifactory/maven-open</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dxfeed-open</id>
            <name>dxfeed-open</name>
            <url>https://dxfeed.jfrog.io/artifactory/maven-open</url>
        </pluginRepository>
    </pluginRepositories>

    <scm>
        <url>https://stash.in.devexperts.com/scm/mdd/qd.git</url>
        <connection>scm:git:ssh://git@stash.in.devexperts.com:7999/mdd/qd.git</connection>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>qd</id>
            <url>https://maven.in.devexperts.com/content/repositories/qd/</url>
        </repository>
        <snapshotRepository>
            <id>qd-snapshot</id>
            <url>https://maven.in.devexperts.com/content/repositories/qd-snapshot/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
