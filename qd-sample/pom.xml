<?xml version="1.0" encoding="UTF-8"?>
<!--
  !++
  QDS - Quick Data Signalling Library
  !-
  Copyright (C) 2002 - 2021 Devexperts LLC
  !-
  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
  If a copy of the MPL was not distributed with this file, You can obtain one at
  http://mozilla.org/MPL/2.0/.
  !__
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>QD</artifactId>
        <groupId>com.devexperts.qd</groupId>
        <version>3.332</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>qd-sample</artifactId>
    <packaging>jar</packaging>

    <properties>
        <!-- Internal module - do not deploy  -->
        <deploy.skip>true</deploy.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>dxlib</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>dxlib-qd-sandbox</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-tools</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-nio</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-stripe</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-logger</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qds-file</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qds-monitoring</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>proto-ssl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>proto-sample</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>qd-samplecert</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>dxfeed-ipf-filter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>dxfeed-codegen</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Jetty for HTTP Server Sample -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!-- Need log4j, but only for testing -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Utility classes for testing -->
        <dependency>
            <groupId>com.devexperts.qd</groupId>
            <artifactId>dxlib</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>qd-rmi</id>
                        <phase>test-compile</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/for-classloader-test" />
                                <javac includeantruntime="false" srcdir="${basedir}/src/classLoaderTest" destdir="${project.build.directory}/for-classloader-test" classpath="${project.build.testOutputDirectory}" fork="true" executable="${java.home}/../bin/javac" />
                                <!-- Maven overrides java.home to jre subdir, so we go up to get to JDK dir -->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <testCompilerArguments>
                        <processor>com.dxfeed.api.codegen.ImplCodeGenAnnotationProcessor</processor>
                    </testCompilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>0.5C</forkCount>
                    <reuseForks>true</reuseForks>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
